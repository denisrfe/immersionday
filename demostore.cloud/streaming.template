{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Demo Analytics: this template creates an Amazon Kinesis Analytics application that can be used to aggregate transctions and storage it to be queried by Amazon Athena.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon Kinesis Configuration"
                    },
                    "Parameters": [
                        "StreamName",
                        "SourceStreamSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon S3 Destination Configuration"
                    },
                    "Parameters": [
                        "S3BucketName",
                        "S3BufferInterval",
                        "S3BufferSize",
                        "S3DestinationPrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "Configuration YAML for Kinesis Analytics"
                    },
                    "Parameters": [
                        "ConfigFileLocation"
                    ]
                }
            ],
            "ParameterLabels": {
                "SourceStreamSize": {
                    "default": "Stream Shard Count"
                },
                "ConfigFileLocation": {
                    "default": "Configuration File Location"
                },
                "S3BucketName": {
                    "default": "Bucket Name"
                },
                "S3BufferInterval": {
                    "default": "Buffer Interval"
                },
                "S3BufferSize": {
                    "default": "Buffer Size"
                },
                "S3DestinationPrefix": {
                    "default": "Destination Prefix"
                }
            }
        }
    },
    "Parameters": {
        "DomainName" : {
            "Description": "Name of your ES Domain",
            "Type": "String",
            "Default": "burger"
        },
        "DeployElasticsearch": {
          "Type": "String",
          "Default": "Yes",
          "AllowedValues": [ "Yes", "No" ]
        },
        "StreamName": {
            "Description": "Name of your New Kinesis Stream",
            "Type": "String",
            "Default": "nanananan"
        },
        "SourceStreamSize": {
            "Description": "Kinesis Stream Size",
            "Type": "String",
            "AllowedPattern": "[0-9]*",
            "Default": "2"
        },
        "S3BucketName": {
            "Description": "Name of the bucket to put Data.",
            "Type": "String",
            "Default": "<yourname>-burger-bucket-stream"
        },
        "S3DestinationPrefix": {
            "Description": "Name of prefix where the aggregated data will be stored.",
            "Type": "String",
            "Default": "aggregated"
        },
        "ConfigFileLocation": {
            "Description": "<bucket>/<key> Enter the S3 location of the yaml file.",
            "Type": "String",
            "Default": "awsdemostorecdf-useast1/streams/configsqlanalytics/"
        },
        "S3BufferInterval": {
            "Description": "Number of seconds to buffer data before delivering to S3 (60 to 900).",
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 900
        },
        "S3BufferSize": {
            "Description": "Number of MB of data to buffer before delivering to S3 (1 to 128).",
            "Type": "Number",
            "Default": 5,
            "MinValue": 1,
            "MaxValue": 128
        }
    },
    "Mappings": {},
    "Conditions": {
        "ConfigFileNotProvidedCondition": {
            "Fn::Equals": [
                {
                    "Ref": "ConfigFileLocation"
                },
                ""
            ]
        },
        "CfElasticSearch": {
            "Fn::Equals": [
                {
                    "Ref": "DeployElasticsearch"
                },
                "Yes"
            ]
        }
    },
    "Resources": {
        "SourceStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "Name": {
                    "Ref": "StreamName"
                },
                "ShardCount": {
                    "Ref": "SourceStreamSize"
                }
            }
        },
        "StreamingAnalyticsBucket": {
          "Type" : "AWS::S3::Bucket",
                  "Properties" : {
                    "BucketName" : { "Ref" :  "S3BucketName"}
                  }
        },
        "RawDatatoS3Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "firehose.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Raw-Data-to-S3-Delivery-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "RawDatatoS3": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "S3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:s3:::",
                                {
                                    "Ref": "StreamingAnalyticsBucket"
                                }
                            ]
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": 60,
                        "SizeInMBs": 10
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "Prefix": "rawdata/",
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "RawDatatoS3Role",
                            "Arn"
                        ]
                    }
                }
            }
        },
        "PersistRawDataLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Lambda-PersistRawData-Role-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:DescribeStream",
                                        "kinesis:GetShardIterator",
                                        "kinesis:GetRecords"
                                    ],
                                    "Resource": [
                                        {
                                                    "Fn::GetAtt": [
                                                        "SourceStream",
                                                        "Arn"
                                                    ]
                                        }
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "firehose:PutRecordBatch"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:firehose:",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    ":",
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    ":deliverystream/",
                                                    {
                                                        "Ref": "RawDatatoS3"
                                                    }
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "PersistRawDataFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "from __future__ import print_function",
                                "import boto3",
                                "import base64",
                                "",
                                "fh = boto3.client('firehose')",
                                "",
                                "def lambda_handler(event, context):",
                                "    rawDataChunks=[event['Records'][x:x+500] for x in xrange(0, len(event['Records']), 500)]",
                                "    for chunk in rawDataChunks:",
                                "        count = 0",
                                "        batch=[]",
                                "        for record in chunk:",
                                "            batchDict={}",
                                "            payload = base64.b64decode(record['kinesis']['data'])+'\\n'",
                                "            batchDict['Data']=payload",
                                "            batch.append(batchDict)",
                                "            count+=1",
                                "        try:",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "            fh.put_record_batch(DeliveryStreamName='",
                                            {
                                                "Ref": "RawDatatoS3"
                                            },
                                            "',Records=batch)"
                                        ]
                                    ]
                                },
                                "            print('Put '+str(count)+' records to Amazon Kinesis Firehose Delivery Stream')",
                                "        except Exception as e:",
                                "            print(e)"
                            ]
                        ]
                    }
                },
                "Description": "This function GETs and decodes raw data records from the source Kinesis stream, and batch PUTs them to a Firehose Delivery Stream",
                "Handler": "index.lambda_handler",
                "MemorySize": "128",
                "Role": {
                    "Fn::GetAtt": [
                        "PersistRawDataLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30"
            }
        },
        "PersistRawDataTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 1000,
                "Enabled": "True",
                "EventSourceArn": {
                            "Fn::GetAtt": [
                                "SourceStream",
                                "Arn"
                            ]
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "PersistRawDataFunction",
                        "Arn"
                    ]
                },
                "StartingPosition": "LATEST"
            }
        },
        "IngestionDataLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Lambda-PersistRawData-Role-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:DescribeStream",
                                        "kinesis:GetShardIterator",
                                        "kinesis:GetRecords",
                                        "kinesis:PutRecords",
                                        "kinesis:PutRecord"
                                    ],
                                    "Resource": [
                                        {
                                                    "Fn::GetAtt": [
                                                        "SourceStream",
                                                        "Arn"
                                                    ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "IngestionDataFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                  "S3Bucket": "awsdemostorecdf-useast1",
                  "S3Key": { "Fn::Join": [
                      "",
                      [
                          "streams/ingestion/",
                          {
                              "Ref": "DomainName"
                          },
                          ".zip"
                      ]
                      ]
                    }
                },
                "Description": "This function generates streaming data to kinesis streams",
                "Handler": "ingestion.lambda_handler",
                "MemorySize": "128",
                "Role": {
                    "Fn::GetAtt": [
                        "IngestionDataLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "Timeout": "180",
                "Environment":  {
                  "Variables" : {
                    "STREAM_NAME" : {"Ref": "StreamName"}
                  }
                }
            }
        },
        "FirehoseToS3Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "firehose.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Condition": {
                                "StringEquals": {
                                    "sts:ExternalId": {
                                        "Ref": "AWS::AccountId"
                                    }
                                }
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Firehose-to-S3-Delivery-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:AbortMultipartUpload",
                                        "s3:GetBucketLocation",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListBucketMultipartUploads",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "arn:aws:s3:::",
                                                    {
                                                        "Ref": "StreamingAnalyticsBucket"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "FIrehoseToS3": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "S3DestinationConfiguration": {
                    "BucketARN": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:s3:::",
                                {
                                    "Ref": "StreamingAnalyticsBucket"
                                }
                            ]
                        ]
                    },
                    "BufferingHints": {
                        "IntervalInSeconds": {
                            "Ref": "S3BufferInterval"
                        },
                        "SizeInMBs": {
                            "Ref": "S3BufferSize"
                        }
                    },
                    "CompressionFormat": "UNCOMPRESSED",
                    "Prefix": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Ref": "S3DestinationPrefix"
                                },
                                "/"
                            ]
                        ]
                    },
                    "RoleARN": {
                        "Fn::GetAtt": [
                            "FirehoseToS3Role",
                            "Arn"
                        ]
                    }
                }
            }
        },
        "LambdaRoleCreateKAApp": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Ref": "AWS::AccountId"
                                }
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "Lambda-Execution-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesisanalytics:CreateApplication",
                                        "kinesisanalytics:DeleteApplication",
                                        "kinesisanalytics:DescribeApplication"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:kinesisanalytics:",
                                                {
                                                    "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                    "Ref": "AWS::AccountId"
                                                },
                                                ":application/*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesisanalytics:ListApplications"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudwatch:GetMetricStatistics"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:::",
                                                                  {"Ref": "ConfigFileLocation"},
                                                                  {"Ref": "DomainName"},
                                                                  ".yaml"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "KinesisAnalyticsRole",
                                            "Arn"
                                        ]
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:DescribeStacks"
                                    ],
                                    "Resource": {
                                        "Ref": "AWS::StackId"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "KinesisAnalyticsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "kinesisanalytics.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "KinesisAnalyticsRole-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "ReadInputKinesis",
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:DescribeStream",
                                        "kinesis:GetShardIterator",
                                        "kinesis:GetRecords"
                                    ],
                                    "Resource": [
                                        {
                                                    "Fn::GetAtt": [
                                                        "SourceStream",
                                                        "Arn"
                                                    ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "WriteOutputFirehose",
                                    "Effect": "Allow",
                                    "Action": [
                                        "firehose:DescribeDeliveryStream",
                                        "firehose:PutRecord",
                                        "firehose:PutRecordBatch"
                                    ],
                                    "Resource": [
                                        {


                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:firehose:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":deliverystream/",
                                                            {
                                                                "Ref": "FIrehoseToS3"
                                                            }
                                                        ]
                                                    ]
                                        },
                                        {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kinesis:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":stream/kinesis-analytics-placeholder-stream-destination"
                                                        ]
                                                    ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "WriteOutputKinesis",
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:DescribeStream",
                                        "kinesis:PutRecord",
                                        "kinesis:PutRecords"
                                    ],
                                    "Resource": [
                                        {
                                                    "Fn::Join": [
                                                        "",
                                                        [
                                                            "arn:aws:kinesis:",
                                                            {
                                                                "Ref": "AWS::Region"
                                                            },
                                                            ":",
                                                            {
                                                                "Ref": "AWS::AccountId"
                                                            },
                                                            ":stream/kinesis-analytics-placeholder-stream-destination"
                                                        ]
                                                    ]
                                                }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ESFunctionSourceMap":{
              "Type" : "AWS::Lambda::EventSourceMapping",
              "Condition" : "CfElasticSearch",
              "DependsOn": [
                  "KinesisESFunction"
              ],
              "Properties" : {
                "BatchSize" : 500,
                "StartingPosition" : "TRIM_HORIZON",
                "EventSourceArn" : { "Fn::Join" : [ "", [ "arn:aws:kinesis:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":stream/", { "Ref" : "StreamName" }] ] },
                "FunctionName" : { "Fn::GetAtt" : ["KinesisESFunction", "Arn"] },
              }
        },
        "KinesisESFunction": {
            "Type": "AWS::Lambda::Function",
            "Condition" : "CfElasticSearch",
            "DependsOn": [
                "PersistRawDataLambdaRole",
                "ElasticsearchDomain"
            ],
            "Properties": {
                "Code": {
                  "S3Bucket": "awsdemostorecdf-useast1",
                  "S3Key": "streams/kinesis_es.zip"
                },
                "Description": "This function reads Kinesis Streams and Writes to ElasticSearch",
                "Handler": "k_to_es.handler",
                "MemorySize": "128",
                "Role": {"Fn::GetAtt": ["PersistRawDataLambdaRole","Arn"]},
                "Runtime": "python3.6",
                "Timeout": "180",
                "Environment":  {
                  "Variables" : {
                    "ES_HOST_HTTP": {
                                "Fn::Join": [
                                    "",
                                    [
                                      "https://",
                                      { "Fn::GetAtt": ["ElasticsearchDomain", "DomainEndpoint"]},
                                    ]
                                ]
                    },
                    "ES_REGION" : {"Ref": "AWS::Region"},
                    "ES_INDEX" : {"Ref": "DomainName"},
                    "ES_IND_TYPE" : "transactions"
                  }
                }
            }
        },
        "KALambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "LambdaRoleCreateKAApp"
            ],
            "Properties": {
                "Code": {
                  "S3Bucket": "awsdemostorecdf-useast1",
                  "S3Key": "streams/createapp.zip"
                },
                "Description": "This function configures and lunches a Kinesis Analytics Application",
                "Handler": "lambda_function.lambda_handler",
                "MemorySize": "128",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRoleCreateKAApp",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": "30"
            }
        },
        "CreateKAApplication": {
            "Type": "Custom::KinesisAnalyticsApp",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "KALambdaFunction",
                        "Arn"
                    ]
                },
                "FunctionName": {"Ref": "KALambdaFunction"},
                "Region": {"Ref": "AWS::Region"},
                "ConfigFile": {
                    "Fn::If": [
                        "ConfigFileNotProvidedCondition",
                        {
                            "Ref": "AWS::NoValue"
                        },
                        {"Fn::Join": ["", [
                                          {"Ref": "ConfigFileLocation"},
                                          {"Ref": "DomainName"},
                                          ".yaml"
                                      ]]}
                    ]
                },
                "KAAppName": {"Fn::Join": ["", [
                                  "AnalyticsApp-",
                                  {"Ref": "AWS::StackName"}
                              ]]},
                "SourceStream": {
                            "Fn::GetAtt": [
                                "SourceStream",
                                "Arn"
                            ]
                },
                "KARole": {
                    "Fn::GetAtt": [
                        "KinesisAnalyticsRole",
                        "Arn"
                    ]
                },
                "Destination": "Amazon S3",
                "S3Dest": {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:firehose:",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    ":deliverystream/",
                                    {
                                        "Ref": "FIrehoseToS3"
                                    }
                                ]
                            ]
                },
                "StreamDest": {
                            "Ref": "AWS::NoValue"
                },
                "PersistRawData": "yes",
                "AnonymousData": "Yes"
            }
        },
        "ScheduledIngestion": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "Description": "ScheduledRule",
              "ScheduleExpression": "rate(1 minute)",
              "State": "ENABLED",
              "Targets": [{
                "Arn": { "Fn::GetAtt": ["IngestionDataFunction", "Arn"] },
                "Id": "TargetFunctionV1"
              }]
            }
        },
        "PermissionForEventsToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": { "Ref": "IngestionDataFunction" },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": { "Fn::GetAtt": ["ScheduledIngestion", "Arn"] }
            }
        },

        "CloudWatchDashboardforStreaming":{
          "Type" : "AWS::CloudWatch::Dashboard",
          "Properties" : {
              "DashboardName" : {  "Fn::Join": [
                    "",
                    [
                        "DataAnalyticsStreaming-",
                        {
                            "Ref": "AWS::StackName"
                        }
                    ]
                ]
              },
              "DashboardBody" : {


              "Fn::Join": [
              "",
              [


                "{",
                "    \"widgets\": [",
                "        {",
                "            \"type\": \"metric\",",
                "            \"x\": 0,",
                "            \"y\": 0,",
                "            \"width\": 24,",
                "            \"height\": 3,",
                "            \"properties\": {",
                "                \"metrics\": [",
                "                    [ \"AWS/KinesisAnalytics\", \"Records\", \"Id\", \"1.1\", \"Application\",",
                "   \"",
                {
                    "Fn::GetAtt": [
                        "CreateKAApplication",
                        "AppName"
                    ]
                },
                "\", \"Flow\", \"Output\" ],",
                "                    [ \".\", \"Bytes\", \".\", \".\", \".\", \".\", \".\", \".\" ],",
                "                    [ \".\", \"Records\", \".\", \".\", \".\", \".\", \".\", \"Input\" ],",
                "                    [ \".\", \"Bytes\", \".\", \".\", \".\", \".\", \".\", \".\" ]",
                "                ],",
                "                \"view\": \"singleValue\",",
                "                \"region\": \"",
                {
                    "Ref": "AWS::Region"
                },
                "\",",
                "                \"stat\": \"Sum\",",
                "                \"period\": 300",
                "            }",
                "        },",
                "        {",
                "            \"type\": \"metric\",",
                "            \"x\": 0,",
                "            \"y\": 3,",
                "            \"width\": 12,",
                "            \"height\": 6,",
                "            \"properties\": {",
                "                \"metrics\": [",
                "                    [ \"AWS/KinesisAnalytics\", \"Success\", \"Id\", \"1.1\", \"Application\", \"",
                  {
                      "Fn::GetAtt": [
                          "CreateKAApplication",
                          "AppName"
                      ]
                  },
                "\", \"Flow\", \"Output\", { \"stat\": \"Sum\", \"yAxis\": \"left\" } ],",
                "                    [ \".\", \"MillisBehindLatest\", \".\", \".\", \".\", \".\", \".\", \"Input\", { \"yAxis\": \"right\" } ],",
                "                    [ \"...\", { \"stat\": \"Minimum\", \"yAxis\": \"right\" } ]",
                "                ],",
                "                \"view\": \"timeSeries\",",
                "                \"stacked\": false,",
                "                \"region\": \"",
                {
                    "Ref": "AWS::Region"
                },
                "\",",
                "                \"stat\": \"Maximum\",",
                "                \"period\": 300",
                "            }",
                "        }",
                "    ]",
                "}      ",











              ]
              ]
             }



          }
        },




        "SendAnonymousDataCloudWatchRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "events.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "SendAnonymousData-CloudWatchEvent-Role-",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "KALambdaFunction",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Sid": "",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },



        "GlueRole":{
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                        "AssumeRolePolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Principal": {
                                        "Service": [
                                            "glue.amazonaws.com"
                                        ]
                                    },
                                    "Action": [
                                        "sts:AssumeRole"
                                    ]
                                }
                            ]
                        },
                        "Path": "/",
                        "Policies": [
                            {
                                "PolicyName": "root",
                                "PolicyDocument": {
                                    "Version": "2012-10-17",
                                    "Statement": [
                                        {
                                            "Effect": "Allow",
                                            "Action": "*",
                                            "Resource": "*"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
       },
       "GlueDatabase": {
                    "Type": "AWS::Glue::Database",
                    "Properties": {
                        "CatalogId": {
                            "Ref": "AWS::AccountId"
                        },
                        "DatabaseInput": {
                            "Name": {
                                "Fn::Join": [
                                  "",
                                    [
                                        "sessions_",
                                        {
                                            "Ref": "DomainName"
                                        }
                                    ]
                                  ]
                            },
                            "Description": "DatabaseDescription",
                        }
                    }
       },
       "MyCrawler": {
           "Type": "AWS::Glue::Crawler",
           "Properties": {
               "Name": {
                   "Fn::Join": [
                         "",
                           [
                             "demo",
                             {
                                 "Ref": "DomainName"
                             }
                           ]
                        ]

               },
               "Role": {
                   "Fn::GetAtt": [
                       "GlueRole",
                       "Arn"
                   ]
               },
               "DatabaseName": {
                   "Ref": "GlueDatabase"
               },
               "Targets": {
                   "S3Targets": [
                       {
                           "Path": {
                               "Ref": "S3BucketName"
                           }
                       }
                   ]
               },
               "SchemaChangePolicy": {
                   "UpdateBehavior": "LOG",
                   "DeleteBehavior": "DELETE_FROM_DATABASE"
               },
               "Schedule": {
                   "ScheduleExpression": "cron(0 * * * ? *)"
               }
           }
       },

       "ElasticsearchDomain": {
         "Type": "AWS::Elasticsearch::Domain",
         "Condition" : "CfElasticSearch",
         "Properties": {
           "DomainName": { "Ref": "DomainName" },
           "ElasticsearchVersion": "6.3",
           "ElasticsearchClusterConfig": {
             "DedicatedMasterEnabled": "true",
             "InstanceCount": "2",
             "ZoneAwarenessEnabled": "true",
             "InstanceType": "m3.medium.elasticsearch"
           },
           "EBSOptions": {
             "EBSEnabled": true,
             "Iops": 0,
             "VolumeSize": 100,
             "VolumeType": "gp2"
           },
           "SnapshotOptions": {
             "AutomatedSnapshotStartHour": "0"
           },
           "AccessPolicies": {
             "Version": "2012-10-17",
             "Statement": [{
               "Effect": "Allow",
               "Principal": {
                 "AWS": "*"
               },
               "Action": "es:*",
               "Resource": [{
                   "Fn::Join": [
                   "",
                   [
                       "arn:aws:es:",
                       {
                           "Ref": "AWS::Region"
                       },
                       ":",
                       {
                           "Ref": "AWS::AccountId"
                       },
                       ":domain/",
                       { "Ref": "DomainName" },
                       "/*",
                   ]
                  ]
                }]
             }]
           },
           "AdvancedOptions": {
             "rest.action.multi.allow_explicit_index": "true"
           }
         }
       },






        "SendAnonymousMetricsTrigger": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Invokes the KALambdaFunction every 15 minutes to collect and send anonymous metrics on solution usage to AWS.",
                "Name": {
                    "Fn::Join": [
                        "",[
                            {"Fn::GetAtt": ["CreateKAApplication","AppName"]},
                            "-metrics"]]},
                "ScheduleExpression": "rate(15 minutes)",
                "RoleArn": {
                    "Fn::GetAtt": [
                        "SendAnonymousDataCloudWatchRole",
                        "Arn"
                    ]
                },
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "KALambdaFunction",
                                "Arn"
                            ]
                        },
                        "Id": {
                            "Ref": "KALambdaFunction"
                        },
                        "Input": {
                            "Fn::Join": [
                                "",
                                [
                                    "{\"RequestType\" :\"SendAnonymousMetrics\",\"AppName\":\"",
                                    {
                                        "Fn::GetAtt": [
                                            "CreateKAApplication",
                                            "AppName"
                                        ]
                                    },
                                    "\",\"uuid\":\"",
                                    {
                                        "Fn::GetAtt": [
                                            "CreateKAApplication",
                                            "UUID"
                                        ]
                                    },
                                    "\"}"
                                ]
                            ]
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "SourceStream": {
            "Description": "Stream your data to this Amazon Kinesis Stream",
            "Value": {

                        "Ref": "SourceStream"
                    }
        },
        "Application": {
            "Description": "Validate and start this Amazon Kinesis Analytics Application",
            "Value": {
                "Fn::GetAtt": [
                    "CreateKAApplication",
                    "AppName"
                ]
            }
        },
        "SolutionBucket": {
            "Description": "Data will be stored in this Amazon S3 bucket",
            "Value": {
                "Ref": "StreamingAnalyticsBucket"
            }
        },

        "UUID": {
            "Description": "UUID of the soln",
            "Value": {
                "Fn::GetAtt": [
                    "CreateKAApplication",
                    "UUID"
                ]
            }
        }
    }
}
